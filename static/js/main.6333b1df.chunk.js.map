{"version":3,"sources":["hooks/usePagination.tsx","utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["usePagination","contentPerPage","count","useState","page","setPage","pageCount","Math","ceil","lastContentIndex","changePage","direction","state","totalPages","nextPage","prevPage","num","firstContentIndex","getNumbers","from","to","numbers","n","push","Pagination","buttons","className","classNames","disabled","href","onClick","map","el","active","items","App","perPage","setPerPage","UsePagination","id","value","onChange","e","target","htmlFor","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6333b1df.chunk.js","sourcesContent":["import { useState } from 'react';\n\ninterface UsePaginationProps {\n  contentPerPage: number,\n  count: number,\n}\n\ninterface UsePaginationReturn {\n  page: number;\n  totalPages: number;\n  firstContentIndex: number;\n  lastContentIndex: number;\n  nextPage: () => void;\n  prevPage: () => void;\n  setPage: (page: number) => void;\n}\n\ntype UsePagination = (arg0: UsePaginationProps) => (UsePaginationReturn);\n\nconst usePagination: UsePagination = ({ contentPerPage, count }) => {\n  const [page, setPage] = useState(1);\n  const pageCount = Math.ceil(count / contentPerPage);\n  const lastContentIndex = page * contentPerPage;\n  const firstContentIndex = lastContentIndex - contentPerPage;\n  const changePage = (direction: boolean) => {\n    setPage((state) => {\n      if (direction) {\n        if (state === pageCount) {\n          return state;\n        }\n\n        return state + 1;\n      // eslint-disable-next-line no-else-return\n      } else {\n        if (state === 1) {\n          return state;\n        }\n\n        return state - 1;\n      }\n    });\n  };\n\n  const setPageSafe = (num: number) => {\n    if (num > pageCount) {\n      setPage(pageCount);\n    } else if (num < 1) {\n      setPage(1);\n    } else {\n      setPage(num);\n    }\n  };\n\n  return {\n    totalPages: pageCount,\n    nextPage: () => changePage(true),\n    prevPage: () => changePage(false),\n    setPage: setPageSafe,\n    firstContentIndex,\n    lastContentIndex,\n    page,\n  };\n};\n\nexport default usePagination;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  nextPage: React.MouseEventHandler<HTMLAnchorElement> | undefined,\n  prevPage: React.MouseEventHandler<HTMLAnchorElement> | undefined,\n  setPage: (num: number) => void,\n  totalPages: number,\n  page: number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  nextPage,\n  prevPage,\n  setPage,\n  totalPages,\n  page,\n}) => {\n  const buttons = getNumbers(1, totalPages);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item',\n        { disabled: page === 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {buttons.map(el => (\n        <li\n          key={el}\n          className={classNames('page-item', { active: page === el })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${el}`}\n            onClick={() => setPage(el)}\n          >\n            {el}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item',\n        { disabled: page === totalPages })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport UsePagination from './hooks/usePagination';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const {\n    firstContentIndex,\n    lastContentIndex,\n    nextPage,\n    prevPage,\n    page,\n    setPage,\n    totalPages,\n  } = UsePagination({\n    contentPerPage: perPage,\n    count: 42,\n  });\n  const handleSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+e.target.value);\n    setPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${firstContentIndex + 1} - ${lastContentIndex < 42 ? lastContentIndex : 42} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        nextPage={nextPage}\n        prevPage={prevPage}\n        setPage={setPage}\n        totalPages={totalPages}\n        page={page}\n      />\n\n      <ul>\n        {items.slice(firstContentIndex, lastContentIndex).map(el => (\n          <li key={el} data-cy=\"item\">{`Item ${el}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}